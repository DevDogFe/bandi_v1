<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bandi.novel.repository.ContestNovelRepository">

	<insert id="insertContestNovel">
		INSERT INTO contest_novel_tb (novel_id,contest_id)
		VALUES
		( #{novelId}, #{contestId})
	</insert>

	<select id="selectContestNovelByNovelId" resultType="com.bandi.novel.model.ContestNovel">
		SELECT * FROM contest_novel_tb
		where novel_id = #{novelId}
	</select>

	<select id="selectContestNovelListByContestId" resultType="com.bandi.novel.model.ContestNovel">
		SELECT * FROM contest_novel_tb
		where contest_id = #{contestId}
	</select>

	<!-- 서비스타입이 공모전인 소설 조회 -->
	<select id="selectContestNovelList" resultType="com.bandi.novel.dto.response.ContestNovelDto">
		<if test='sort.equals("default")'>
			SELECT n.id, n.title, n.user_id, u.username, g.name AS genre_name, c.title as contest_name, favoriteCount, score
			FROM novel_tb AS n
			LEFT JOIN user_tb AS u
			ON n.user_id = u.id
			LEFT JOIN
			genre_tb AS g
			ON n.genre_id
			= g.id
			LEFT JOIN contest_novel_tb AS cn
			ON n.id = cn.novel_id
			LEFT JOIN contest_tb AS c
			ON cn.contest_id = c.id
			LEFT JOIN
			(
			SELECT count(user_id) AS favoriteCount, novel_id
			FROM
			user_favorite_tb
			GROUP BY
			novel_id
			) AS uf
			ON n.id = uf.novel_id
			LEFT JOIN
			(
			SELECT novel_id, avg(score) AS score FROM
			novel_section_tb AS ns
			LEFT JOIN
			(
			SELECT avg(score) AS score, section_id
			FROM score_tb
			GROUP BY section_id
			) AS sc
			ON ns.id = sc.section_id
			GROUP BY ns.novel_id
			)
			AS ns
			ON n.id = ns.novel_id
			WHERE n.service_type_id = 3
			AND c.id = #{contestId}
			ORDER BY n.id DESC
		</if>
		<if test='sort.equals("favorite")'>
			SELECT n.id, n.title, n.user_id, u.username, g.name AS genre_name, c.title as contest_name, favoriteCount, score
			FROM novel_tb AS n
			LEFT JOIN user_tb AS u
			ON n.user_id = u.id
			LEFT JOIN
			genre_tb AS g
			ON n.genre_id
			= g.id
			LEFT JOIN contest_novel_tb AS cn
			ON n.id = cn.novel_id
			LEFT JOIN contest_tb AS c
			ON cn.contest_id = c.id
			LEFT JOIN
			(
			SELECT count(user_id) AS favoriteCount, novel_id
			FROM
			user_favorite_tb
			GROUP BY
			novel_id
			) AS uf
			ON n.id = uf.novel_id
			LEFT JOIN
			(
			SELECT novel_id, avg(score) AS score FROM
			novel_section_tb AS ns
			LEFT JOIN
			(
			SELECT avg(score) AS score, section_id
			FROM score_tb
			GROUP BY section_id
			) AS sc
			ON ns.id = sc.section_id
			GROUP BY ns.novel_id
			)
			AS ns
			ON n.id = ns.novel_id
			WHERE n.service_type_id = 3
			AND c.id = #{contestId}
			ORDER BY favoriteCount DESC
		</if>
		<if test='sort.equals("score")'>
			SELECT n.id, n.title, n.user_id, u.username, g.name AS genre_name, c.title as contest_name, favoriteCount, score
			FROM novel_tb AS n
			LEFT JOIN user_tb AS u
			ON n.user_id = u.id
			LEFT JOIN
			genre_tb AS g
			ON n.genre_id
			= g.id
			LEFT JOIN contest_novel_tb AS cn
			ON n.id = cn.novel_id
			LEFT JOIN contest_tb AS c
			ON cn.contest_id = c.id
			LEFT JOIN
			(
			SELECT count(user_id) AS favoriteCount, novel_id
			FROM
			user_favorite_tb
			GROUP BY
			novel_id
			) AS uf
			ON n.id = uf.novel_id
			LEFT JOIN
			(
			SELECT novel_id, avg(score) AS score FROM
			novel_section_tb AS ns
			LEFT JOIN
			(
			SELECT avg(score) AS score, section_id
			FROM score_tb
			GROUP BY section_id
			) AS sc
			ON ns.id = sc.section_id
			GROUP BY ns.novel_id
			)
			AS ns
			ON n.id = ns.novel_id
			WHERE n.service_type_id = 3
			AND c.id = #{contestId}
			ORDER BY score DESC
		</if>
	</select>

	<!-- 공모전인 소설 검색 조회 -->
	<select id="selectContestNovelsByGenreIdAndName" resultType="com.bandi.novel.dto.response.ContestNovelDto">
		<if test='sort.equals("default")'>
			<if test="genreId != null and search != null">
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND g.id = #{genreId}
				AND n.title LIKE CONCAT('%', #{search}, '%')
				AND c.id = #{contestId}
				ORDER BY n.id DESC
			</if>
			<if test='genreId != null and search == null'>
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND g.id = #{genreId}
				AND c.id = #{contestId}
				ORDER BY n.id DESC
			</if>
			<if test="genreId == null and search != null">
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND n.title LIKE CONCAT('%', #{search}, '%')
				AND c.id = #{contestId}
				ORDER BY n.id DESC
			</if>
		</if>
		<if test='sort.equals("favorite")'>
			<if test="genreId != null and search != null">
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND g.id = #{genreId}
				AND n.title LIKE CONCAT('%', #{search}, '%')
				AND c.id = #{contestId}
				ORDER BY favoriteCount DESC
			</if>
			<if test='genreId != null and search == null'>
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND g.id = #{genreId}
				AND c.id = #{contestId}
				ORDER BY favoriteCount DESC
			</if>
			<if test="genreId == null and search != null">
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND n.title LIKE CONCAT('%', #{search}, '%')
				AND c.id = #{contestId}
				ORDER BY favoriteCount DESC
			</if>
		</if>
		<if test='sort.equals("score")'>
			<if test="genreId != null and search != null">
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND g.id = #{genreId}
				AND n.title LIKE CONCAT('%', #{search}, '%')
				AND c.id = #{contestId}
				ORDER BY score DESC
			</if>
			<if test='genreId != null and search == null'>
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND g.id = #{genreId}
				AND c.id = #{contestId}
				ORDER BY score DESC
			</if>
			<if test="genreId == null and search != null">
				SELECT n.id, n.title, n.user_id, u.nick_name, g.name AS genre_name, favoriteCount, score
				FROM novel_tb AS n
				LEFT JOIN user_tb AS u
				ON n.user_id = u.id
				LEFT JOIN genre_tb AS g
				ON n.genre_id = g.id
				LEFT JOIN
				contest_novel_tb AS cn
				ON n.id = cn.novel_id
				LEFT JOIN contest_tb AS c
				ON cn.contest_id = c.id
				LEFT JOIN
				(
				SELECT count(user_id) AS favoriteCount, novel_id
				FROM
				user_favorite_tb
				GROUP BY
				novel_id
				) AS uf
				ON n.id = uf.novel_id
				LEFT JOIN
				(
				SELECT novel_id, avg(score) AS score FROM
				novel_section_tb AS ns
				LEFT JOIN
				(
				SELECT avg(score) AS score, section_id
				FROM score_tb
				GROUP BY section_id
				) AS sc
				ON ns.id = sc.section_id
				GROUP BY ns.novel_id
				)
				AS ns
				ON n.id = ns.novel_id
				WHERE n.service_type_id = 3
				AND n.title LIKE CONCAT('%', #{search}, '%')
				AND c.id = #{contestId}
				ORDER BY score DESC
			</if>
		</if>
	</select>

	<delete id="deleteContestNovelByNovelId">
		delete from contest_novel_tb where novel_id = #{novelId}
	</delete>

</mapper>